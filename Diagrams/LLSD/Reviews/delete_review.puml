@startuml
actor User

participant "<<View>>\nProfile" as DashB

participant "<<View>>\nCustomerViewSpecificReview" as AllServP

participant "<<Controller>>\nReviewController" as Sc

participant "<<Service>>\nReviewService" as Rs

participant "<<Service>>\nEmailService" as Semail

participant "<<Repository>>\nReviewRepository" as Rrep

participant "review : Review" as R

participant "Database" as Db

ref over User, DashB, AllServP, Sc, Rs, Semail, Rrep, R, Db
    ViewReviewById
end ref

opt

User -> DashB : CustomerViewSpecificReview(reviewId:String)
activate DashB

DashB -> AllServP : render()
activate AllServP

AllServP -> Sc : DELETE api/v1/corso/reviews/{reviewId}
activate Sc
Sc -> Rs : deleteReview(reviewId:String)
activate Rs

Rs -> Rrep : findReviewByReviewId_ReviewIdAndUserId(reviewId:String, userId:String)
activate Rrep

Rrep -> Db : SELECT * FROM reviews WHERE review_id = reviewId AND user_id = userId

activate Db

Db --> R : review

deactivate Db

activate R


R --> Rrep : review : Review

deactivate Rrep



alt Review is Pinned


Rs -> Semail : sendEmail(recipient: String,subject: String, template: String, data: parameters:Map<String, String>)
activate Semail
deactivate Semail

end

Rs -> Rrep : delete(review)

deactivate R

activate Rrep
Rrep -> Db : DELETE FROM reviews WHERE review_id = reviewId
activate Db


Db --> Rrep : void
deactivate Db

Rrep --> Rs : void

Rs --> Sc : void

Sc --> AllServP : void


@enduml