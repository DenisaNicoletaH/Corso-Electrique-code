@startuml

actor Admin

participant "<<View>>\nEditGallery" as Pfp

participant "<<View>>\nAddGallery" as Wrp

participant "galleryRequest : GalleryRequest" as Gq

participant "<<Controller>>\nGalleryController" as Rc

participant "galleryResponse : GalleryResponse" as Gr

participant "<<Service>>\nGalleryService" as Gs

participant "<<Service>>\nCloudinaryService" as Cs


participant "gallery : Gallery" as G


participant "<<Repository>>\nGalleryRepository" as Grep

participant "galleryDb : Gallery" as Gdb

participant "<<MySQL>>\nDatabase" as Db

participant "<<Mapper>>\nGalleryResponseMapper" as GresM

participant "<<Mapper>>\nGalleryRequestMapper" as GreqM

ref over Pfp, Wrp, Gq, Rc, Gr, Gs, G, Grep, Gdb, Db, GresM, GreqM
    ViewCarousel
end

opt
activate Pfp

Pfp -> Wrp: Render()
activate Wrp
Admin -> Wrp: postNewGallery()

Wrp -> Gq: POST /api/v1/coGso/galleries/carousel

activate Gq

Gq -> Rc

activate Rc

Rc -> Gs: createGallery(galleryRequest)
activate Gs

Gs -> Cs: uploadBase64Image(galleryRequest.getPhoto():String)
activate Cs

deactivate Cs
Gs -> GreqM: toGalleryRequest(galleryRequest)

activate GreqM

GreqM -> G: Gallery

deactivate Gq
deactivate GreqM

activate G

G -> Gs : gallery : Gallery



Gs -> Grep: save(gallery)
activate Grep
deactivate G

Grep -> Db: INSERT INTO galleries (...) VALUES (...)
activate Db

Db -> Gdb: galleryDb : Gallery
deactivate Db

activate Gdb
Gdb -> Grep: galleryDb : Gallery

Grep -> Gs: galleryDb : Gallery
deactivate Grep
Gs -> GresM: toGalleryResponse(gallery)
deactivate Gdb
activate GresM


GresM --> Gr: GalleryResponse
deactivate GresM
activate Gr

Gr --> Gs : galleryResponse : GalleryResponse

Gs --> Rc: galleryResponse : GalleryResponse


Rc --> Wrp: galleryResponse : GalleryResponse

deactivate Gr
end opt
@enduml