@startuml
actor Admin

participant "Dashboard" as DashB

participant "<<View>>\nServicesThroughDashboard" as ModServP

participant "<<Controller>>\nServiceController" as Sc

participant "<<Service>>\nServiceService" as Ss

participant "service : Service" as S

participant "<<Repository>>\nServiceRepository" as Srep

participant "serviceDb : Service" as Sdb

participant "serviceResponse : ServiceResponse" as Sr

participant "Database" as Db

participant "ServiceResponseMapper" as SresM

ref over Admin, DashB, ModServP, Sc, Sr, Ss, S, Srep, Sdb, Db, SresM
    ViewServiceById
end ref

opt
Admin -> DashB : ChangeServiceVisibility()
activate DashB
DashB -> ModServP : render()
activate ModServP

ModServP -> Sc: PATCH /api/v1/corso/services/{serviceId}/visibility
activate Sc

Sc -> Ss: changeServiceVisibility(serviceId)
activate Ss

Ss -> Srep: findByServiceIdentifier_serviceId(serviceId)
activate Srep

Srep -> Db: SELECT * FROM services WHERE service_identifier = :serviceId

activate Db

Db --> S: service
activate S

S -> Srep: service

Srep --> Ss: service

deactivate Db


Ss -> Srep: save(service)

Srep -> Db: UPDATE services SET active = :active WHERE service_id = :serviceId
activate Db

Db --> Srep: service
deactivate Db
deactivate S

Srep --> S: service


activate S
S --> Ss : service:Service

Ss -> SresM: toServiceResponse(service)
deactivate S
activate SresM

SresM --> Sr: ServiceResponse

activate Sr
deactivate SresM

Sr --> Ss: serviceResponse:ServiceResponse

Ss --> Sc: serviceResponse:ServiceResponse

Sc --> ModServP: serviceResponse:ServiceResponse

deactivate Ss

@enduml