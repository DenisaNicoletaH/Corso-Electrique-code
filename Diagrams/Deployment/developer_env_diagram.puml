@startuml
!include <archimate/Archimate>
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/java.puml
!include DEVICONS/mysql.puml
!include DEVICONS/react.puml
!include DEVICONS/html5.puml

!define SPRITESURL https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites
!includeurl SPRITESURL/auth0.puml
!include DEVICONS/aws.puml

!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2

!include DEVICONS2/google.puml

!include DEVICONS2/npm_original_wordmark.puml
AddElementTag("service", $shape=EightSidedShape(), $bgColor="Green", $fontColor="white", $legendText="API \neight sided")
AddElementTag("ext_service", $shape=EightSidedShape(), $bgColor="Gray", $fontColor="white" ,$legendText="External Services\neight sided")
AddElementTag("My SQL Database", $shape=RoundedBoxShape(), $bgColor="DarkCyan",$borderColor="Black", $fontColor="white", $legendText="Database")
AddElementTag("webSite", $shape=RoundedBoxShape(), $bgColor="DodgerBlue", $fontColor="white", $legendText="Single-Page Application")
AddElementTag("webApp", $shape=RoundedBoxShape(), $bgColor="OrangeRed", $fontColor="white", $legendText="Web Application")

SetDefaultLegendEntries("")


allowmixing

rectangle "Developer's Laptop \n[Deployment Node: Windows 11 and Linux Fedora 39]" as laptop {
    
    node "Webpack Developement Server \n[Deployment Node : webpack-dev-server/^4.6.0]" as react {   
        Container(react, "Web Application", "Container: Html and React JS","Delivers the static content for the Single Page Application.",  $tags="webApp")
    }
    
    node "Docker Container - API \n[Deployment Node : Docker]" as backend {
        node "Apache Tomcat\n[Deployment Node : Apache Tomcat/10.1.13]" as tom {
            Container(java, "Java Spring Boot", "Container: Java and Spring Boot","Provides online tracking features and information about the electrical company Corso.", $sprite="java", $tags="service")
        }
    }
    node "Docker Container - Database \n[Deployment Node : Docker]" as db {
        node "MySQL Server \n[Deployment Node : MySQL Server/5.7.44]" as sql{
            Container(mysql, "MySQL Database", "Container: MySQL Schema.","Stores all the data of the company related to orders, customers, reviews, FAQ's, galleries and services.", $sprite="mysql", $tags="My SQL Database")
        }
    }
    node "Web Browser \n[Deployment Node : Chrome and Firefox]" as browser {
        Container(browser_cont, "Single-Page Application", "Container : JavaScript and React JS","Provides a GUI interface that contains all the functionalities of the Spring boot application. Uses REACT Router to handle the multiple pages." ,$sprite="react",$tags="webSite")
    }

}

Container_Ext(cloudinary, "Cloudinary Service", "REST API", "Cloudinary's image hosting service and API.", $sprite="npm_original_wordmark", $tags="ext_service")
Container_Ext(auth, "Auth0", "SaaS", "Auth0 is an easy to implement, adaptable authentication and authorization platform.", $sprite="auth0", $tags="ext_service")
Container_Ext(email, "Gmail SMTP System", "Email Service", "The google SMTP emailing system.", $sprite="google", $tags="ext_service")

browser_cont <-[dashed]- react : Delivers to the web browser
browser_cont -[dashed]-> java : Makes API calls to \n[JSON/HTTP]
java -[dashed]> mysql : SQL/TCP\n[JBDC]

java -[dashed]-> cloudinary : Makes API calls to \n[JSON/HTTPS]
java -[dashed]-> auth : Makes API calls to \n[OAuth2/OpenID]
java -[dashed]-> email : Sends email to \n[SMTP/TCP/IP]
SHOW_LEGEND()
@endpuml